var mongoUser  = require('./init'); //Connect to the database
var crypto = require('crypto');
var mongoose = require('mongoose');
var nodemailer = require('nodemailer');
/**
  * initialise the mail transporter -  create reusable transporter object using SMTP transport
  */
var smtpTransport = nodemailer.createTransport("SMTP",{
  auth:{
          user: "vasilisfouroulis@gmail.com",
          pass: "ak650046"
       }
});

exports.register = function(name, surname , email, userName, password,callback) {

  //validations of the user's request for to register
  if (!(email.indexOf("@") == email.length)) {
    if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) &&
        password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
          //creating more secure password and email
          var token = crypto.createHash('sha512').update(email).digest("hex"); //hashed token with email
          var hashed_password = crypto.createHash('sha512').update(password).digest("hex");

          var mailOptions = {
            from : "check in map Calendar <vasilisfouroulis@gmail.com>",
            to : email,
            subject: "Welcome to Map Calendar",
            text : "hello " + userName + " Welcome to the App. The Map Calendar Team :)"
          };

          //a new user
          var newUser = new mongoUser ({
              name : name,
              surname : surname,
              email : email,
              userName : userName,
              passWord : hashed_password,
              token : token
          });


          // find all users with email
          mongoUser.find({email:email}, function(err,users){
            //count the users
            var length = users.length;
            if(length == 0 ){
              //send the mail

              newUser.save(function(err) {
                smtpTransport.sendMail(mailOptions)
                //the user takes his token
                callback({'response':"Sucessfully Registered",
                          'res':true,
                          'token': token });
              });

            } else { //the user allready exists
                callback({'response':"Email already Registered",'res':false});
            }
          });
          //the user is not Registered

        } else {
          //validation of Password
          callback({'response':"Password Weak",'res':false});
        }
  } else {
    //validation of email
    callback({'response':"Email Not Valid",'res':false});
  }


}
